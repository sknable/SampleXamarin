
// This file has been generated by the GUI designer. Do not modify.
namespace Agent
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action FileAction;
		private global::Gtk.Action redoAction;
		private global::Gtk.Action changeState;
		private global::Gtk.Action logout;
		private global::Gtk.VBox vbox1;
		private global::Gtk.Toolbar agenttoolbar;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TreeView treeview1;
		private global::Gtk.Statusbar statusbar1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Agent.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w1.Add (this.FileAction, null);
			this.redoAction = new global::Gtk.Action ("redoAction", global::Mono.Unix.Catalog.GetString ("Take Next"), null, "gtk-redo");
			this.redoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Take Next");
			w1.Add (this.redoAction, null);
			this.changeState = new global::Gtk.Action ("changeState", global::Mono.Unix.Catalog.GetString ("Change State"), null, "gtk-yes");
			this.changeState.ShortLabel = global::Mono.Unix.Catalog.GetString ("Change State");
			w1.Add (this.changeState, null);
			this.logout = new global::Gtk.Action ("logout", null, null, "gtk-stop");
			w1.Add (this.logout, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "Agent.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Mono Agent");
			this.Icon = global::Stetic.IconLoader.LoadIcon (this, "gtk-about", global::Gtk.IconSize.Menu);
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child Agent.MainWindow.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name=\'agenttoolbar\'><toolitem name=\'redoAction\' action=\'redoAction\'/" +
				"><toolitem name=\'logout\' action=\'logout\'/><toolitem name=\'changeState\' action=\'c" +
				"hangeState\'/></toolbar></ui>");
			this.agenttoolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/agenttoolbar")));
			this.agenttoolbar.Name = "agenttoolbar";
			this.agenttoolbar.ShowArrow = false;
			this.vbox1.Add (this.agenttoolbar);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.agenttoolbar]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.treeview1 = new global::Gtk.TreeView ();
			this.treeview1.CanFocus = true;
			this.treeview1.Name = "treeview1";
			this.GtkScrolledWindow.Add (this.treeview1);
			this.vbox1.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.GtkScrolledWindow]));
			w4.Position = 1;
			// Container child vbox1.Gtk.Box+BoxChild
			this.statusbar1 = new global::Gtk.Statusbar ();
			this.statusbar1.Name = "statusbar1";
			this.statusbar1.Spacing = 6;
			this.vbox1.Add (this.statusbar1);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.statusbar1]));
			w5.Position = 2;
			w5.Expand = false;
			w5.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 400;
			this.DefaultHeight = 300;
			this.Show ();
			this.redoAction.Activated += new global::System.EventHandler (this.TakeNextPressHandler);
			this.changeState.Activated += new global::System.EventHandler (this.StateChangePressHandler);
			this.logout.Activated += new global::System.EventHandler (this.LogoutPressHandler);
		}
	}
}
